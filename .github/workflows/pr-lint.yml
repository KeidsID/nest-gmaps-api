name: 🔍 PR Lint

on:
  pull_request:
    types:
      - assigned
      - unassigned
      - opened
      - edited
      - synchronize
      - reopened
      - labeled
      - unlabeled
      - ready_for_review

  workflow_dispatch:

concurrency:
  group: ci-pr-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest

    env:
      cachePath: |
        node_modules

    steps:
      - name: 📚 Code Checkout
        uses: actions/checkout@v4

      - name: ⚙️ Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json

      - id: cache-key
        run: |
          echo "cacheKey=ci-pr-${{ hashFiles('./package-lock.json') }}" >> $GITHUB_OUTPUT
      - name: ♻️ Cache Dependencies
        id: cache
        uses: actions/cache@v3
        with:
          key: ${{ steps.cache-key.outputs.cacheKey }}
          path: ${{ env.cachePath }}
          restore-keys: |
            ci-pr-

      - name: 📦 Get Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

    outputs:
      cachePath: ${{ env.cachePath }}
      cacheKey: ${{ steps.cache-key.outputs.cacheKey }}

  ci-pr:
    name: 🔍 PR Lint
    runs-on: ubuntu-latest
    needs: dependencies

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: 📚 Code Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ⚙️ Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version-file: package.json

      - name: ♻️ Restore Dependencies
        uses: actions/cache@v3
        with:
          path: ${{ needs.dependencies.outputs.cachePath }}
          key: ${{ needs.dependencies.outputs.cacheKey }}

      - name: 🔍 Lint Commits
        run: |
          npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

      - name: 🔍 Lint Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx danger ci --failOnErrors --text-only
