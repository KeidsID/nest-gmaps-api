name: 🚀 Continuous Delivery

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.ref_name }}
  cancel-in-progress: false

jobs:
  release:
    name: 🚀 Release
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: 📚 Code Checkout
        uses: actions/checkout@v4

      - name: 🚀 Release
        id: release
        uses: googleapis/release-please-action@v4
        with:
          config-file: release.config.json
          manifest-file: release.manifest.json

    outputs:
      hasRelease: ${{ steps.release.outputs.release_created }}

  dependencies:
    name: 📦 Get Dependencies
    runs-on: ubuntu-latest

    needs: release
    if: ${{ needs.release.outputs.hasRelease }}

    env:
      cachePath: |
        node_modules
        build

    steps:
      - name: 📚 Checkout Code
        uses: actions/checkout@v4

      - name: ⚙️ Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json

      - id: cache-key
        run: |
          echo "cacheKey=cd-${{ hashFiles('./package-lock.json') }}" >> $GITHUB_OUTPUT
      - name: ♻️ Cache Dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ env.cachePath }}
          key: ${{ steps.cache-key.outputs.cacheKey }}
          restore-keys: |
            cd-

      - name: 📦 Get Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: 🏗️ Build
        run: npm run build

    outputs:
      cacheKey: ${{ steps.cache-key.outputs.cacheKey }}
      cachePath: ${{ env.cachePath }}
